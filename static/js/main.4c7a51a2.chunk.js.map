{"version":3,"sources":["logo.svg","Components/Movie.js","routes/Home.js","routes/Detail.js","App.js","serviceWorker.js","index.js","routes/Detail.module.css"],"names":["module","exports","__webpack_require__","p","Movie","_ref","id","coverImg","title","summary","genres","react_default","a","createElement","src","alt","href","concat","dist","to","map","gen","idx","key","Home","_useState","useState","_useState2","Object","slicedToArray","movies","setMovies","_useState3","_useState4","loading","setLoading","getMovies","asyncToGenerator","regenerator_default","mark","_callee","json","wrap","_context","prev","next","fetch","sent","data","console","log","stop","this","apply","arguments","useEffect","className","logo","movie","Components_Movie","medium_cover_image","Detail","useParams","setMovie","getMovie","style","Root","Header","Logo","height","Line","marginBottom","Body","align","listStyle","description_full","year","value","result","bound","Math","round","i","starRate","rating","runtime","url","marginTop","Footer","App","basename","process","PUBLIC_ULR","react_router_dist","path","element","routes_Home","routes_Detail","Boolean","window","location","hostname","match","ReactDOM","createRoot","document","getElementById","render","src_App","navigator","serviceWorker","ready","then","registration","unregister","App-logo-spin","App-link"],"mappings":"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","file":"static/js/main.4c7a51a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// PropTypes 선언\n// 컴포넌트명.propTypes = {}\nMovie.propTypes = {\n\tid: PropTypes.number.isRequired,\n\tcoverImg: PropTypes.string.isRequired,\n\ttitle: PropTypes.string.isRequired,\n\tsummary: PropTypes.string.isRequired,\n\tgenres: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nfunction Movie({ id, coverImg, title, summary, genres }) {\n\t// react-router-dom > Link\n\t// a 태그랑 동일한 동작을 하되, 전체 렌더링되지 않는다는게 차이점.\n\t\n\treturn (\n\t\t<div>\n\t\t\t<img src={coverImg} alt={id}></img>\n\t\t\t<h2>\n\t\t\t\t<a href={`/movie/${id}`}>a    tag : {title}</a>\n\t\t\t\t<br/>\n\t\t\t\t<Link to={`/movie/${id}`}>link tag : {title}</Link>\n\t\t\t</h2>\n\t\t\t<p>{summary}</p>\n\t\t\t<ul>\n\t\t\t\t{genres.map((gen, idx) => (\n\t\t\t\t\t<li key={idx}>{gen}</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t<br />\n\t\t\t<br />\n\t\t</div>\n\t);\n}\n\nexport default Movie;","import React, { useEffect, useState } from 'react';\nimport logo from '../logo.svg';\nimport Movie from '../Components/Movie.js';\n\nfunction Home() {\n\tconst [movies, setMovies] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\n\tconst getMovies = async () => {\n\t\tconst json = await (\n\t\t\tawait fetch('https://yts.mx/api/v2/list_movies.json?minimum_rating=9&sort_by=year')\n\t\t).json();\n\t\tsetMovies(json.data);\n\t\tsetLoading(false);\n\t\tconsole.log(json.data);\n\t};\n\n\tuseEffect(() => {\n\t\tgetMovies();\n\t}, []);\n\n\t// getMovies 함수 > state change func 두 개가 있기 때문에 새로 랜더링 할 때마다 두 번 실행됨.\n\t// console.log(movies);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"App-header\">\n\t\t\t\t<img className=\"App-logo\" src={logo} alt=\"\" />\n\t\t\t\t<h3>Movie Listing WebSite</h3>\n\t\t\t</div>\n\t\t\t<div className=\"Body\">\n\t\t\t\t{loading ? null : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{movies.movies.map((movie) => (\n\t\t\t\t\t\t\t<Movie\n\t\t\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\t\t\tid={movie.id}\n\t\t\t\t\t\t\t\tcoverImg={movie.medium_cover_image}\n\t\t\t\t\t\t\t\ttitle={movie.title}\n\t\t\t\t\t\t\t\tsummary={movie.summary}\n\t\t\t\t\t\t\t\tgenres={movie.genres}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport style from './Detail.module.css';\nimport logo from \"../logo.svg\";\n\nfunction Detail() {\n\t// const id = useParams(); -> result : {id : nnnn}\n\tconst { id } = useParams(); // -> result : nnnn\n\t\n\tconst [movie, setMovie] = useState();\n\tconst [loading, setLoading] = useState(true);\n\t\n\tconst getMovie = async () => {\n\t\tconst json = await (\n\t\t\tawait fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\n\t\t).json();\n\t\tconsole.log(json);\n\t\tsetMovie(json.data.movie);\n\t\tsetLoading(false);\n\t};\n\t\n\tfunction starRate(value) {\n\t\tvar result = value+\" (\";\n\t\tvar bound = Math.round(value);\n\t\tconsole.log(bound);\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\tif (i < bound)\n\t\t\t\tresult += '★';\t\n\t\t\telse \n\t\t\t\tresult += \"☆\";\n\t\t}\n\t\treturn result+\")\";\n\t}\n\n\tuseEffect(() => {\n\t\tgetMovie();\n\t}, []);\n\t\n\tconsole.log(movie);\n\n\treturn (\n\t\t<div className={style.Root}>\n\t\t\t<div className={style.Header}>\n\t\t\t\t<img src={logo} alt=\"logo\" className={style.Logo} height=\"50px\"/>\n\t\t\t\t<h3>Detail of chosen Movie</h3>\n\t\t\t</div>\n\t\t\t<hr className={style.Line} style={{ marginBottom:\"50px\" }} />\n\t\t\t<div className={style.Body}>\n\t\t\t\t{loading ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={logo} alt=\"logo\" className={style.Logo}/>\n\t\t\t\t\t\t<h3 align=\"center\">Movie Details on loading...</h3>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={movie.medium_cover_image} alt={movie.title}/>\n\t\t\t\t\t\t<h2>{movie.title}</h2>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h4>Genres</h4>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{movie.genres.map((gen, idx) => {\n\t\t\t\t\t\t\t\t\treturn <li key={idx} style={{listStyle:\"none\"}}>{gen}</li>\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p>{movie.description_full}</p>\n\t\t\t\t\t\t<p>Year : {movie.year}</p>\n\t\t\t\t\t\t<p>Rate : {starRate(movie.rating)}</p>\n\t\t\t\t\t\t<p>RunT : {movie.runtime}</p>\n\t\t\t\t\t\t<Link to={movie.url}>More Details</Link>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<hr className={style.Line} style={{ marginTop:\"50px\" }} />\n\t\t\t<div className={style.Footer}>\n\t\t\t\t<h6>Only for React Practice. Not for Commercial</h6>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Detail;","import React from 'react';\nimport './App.css';\nimport Home from './routes/Home.js';\nimport Detail from './routes/Detail.js';\n\n// React Router\nimport {\n\tBrowserRouter as Router,\n\tRoutes,\n\tRoute,\n} from 'react-router-dom';\n\n/* App Component\n\t- url 접근을 위한 컴포넌트\n\t- route 사용하기 위함\n*/\nfunction App() {\n\treturn (\n\t\t<Router basename={process.env.PUBLIC_ULR}>\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"/\" element={<Home />}/>\n\t\t\t\t<Route path=\"/movie/:id\" element={<Detail />} />\n\t\t\t\t<Route path=\"/hello\" element={<h3>Hello</h3>} />\n\t\t\t</Routes>\n\t\t</Router>\n\t);\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n// import ReactDOM from 'react-dom';\nimport ReactDOM from \"react-dom/client\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n\n// reportWebVitals();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Root\":\"Detail_Root__1_bYQ\",\"Logo\":\"Detail_Logo__15Xh4\",\"App-logo-spin\":\"Detail_App-logo-spin__Cvzgt\",\"Header\":\"Detail_Header__3Kh1Z\",\"Body\":\"Detail_Body__vHq2Y\",\"Footer\":\"Detail_Footer__105tr\",\"Line\":\"Detail_Line__2HKqw\",\"App-link\":\"Detail_App-link__35vJi\"};"],"sourceRoot":""}